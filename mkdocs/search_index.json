{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Dynamic Dependency Injection\n\n\nHere we are working on Dynamic-Dependency-Injection. You could find this \nrepo on Github -\n \nDynamic-Dependency-Injection\n\n\nBasics about DI -Frameworks\n\n\nIf you want to know a little bit more about DI-Frameworks and the comparison between some of them\nyou could read the following.\n\n\n \n\n\n\n \n \nDI Frameworks - hidden pearls\n \n from \nSven Ruppert\n \n\n\nOr if you want to see it as a talk...\n\n\n\n\n\nWhat goal we want to reach?\n\n\nAfter a longer time using differend DI-Frameworks I decided to start with an internal research project to explore the possibilities to write a different DI-Framework. Something that would fit better to my needs to work with old and big legacy projects. Based on the ProxyBuilder - \nwww.proxybuilder.org\n that was born during the time\nI was writing the german Book \n\"Dynamic Proxies\"\n with \nDr. Heinz Kabutz\n, I started to use this for the implementations of my first version of the \nDynamic Dependency Injection\n  project. \n\n\nThe goals I wanted to reach are:\n\n\n\n\nas less as possible Binding Code\n\n\neasy and simple Lifecycle\n\n\ntechnical and business Model-Validation\n\n\neasy debugging\n\n\neasy mocking\n\n\nDynamic Context\n\n\nonly dependency to the JDK itself  \n\n\n\n\nJump start\n\n\nIf you want to start using this project inside your project you could start with the following dependency \ninside your \npom.xml\n\n\n    \ndependency\n\n      \ngroupId\norg.rapidpm.dynamic-cdi\n/groupId\n\n      \nartifactId\nrapidpm-dynamic-cdi\n/artifactId\n\n      \nversion\n***VERSION***\n/version\n\n    \n/dependency\n\n\n\n\n\nIf you are using releases only you will get them from maven central. But if you want to use the developer snapshots too,\nyou have to use the maven central SNAPSHOT repository.\n\n\nAdd the following to your \nsettings.xml\n to get the snapshots.\n\n\n   \nprofile\n\n      \nid\nallow-snapshots\n/id\n\n      \nactivation\n\n        \nactiveByDefault\ntrue\n/activeByDefault\n\n      \n/activation\n\n      \nrepositories\n\n        \nrepository\n\n          \nid\nsnapshots-repo\n/id\n\n          \nurl\nhttps://oss.sonatype.org/content/repositories/snapshots\n/url\n\n          \nreleases\n\n            \nenabled\nfalse\n/enabled\n\n          \n/releases\n\n          \nsnapshots\n\n            \nenabled\ntrue\n/enabled\n\n            \nupdatePolicy\nalways\n/updatePolicy\n\n          \n/snapshots\n\n        \n/repository\n\n      \n/repositories\n\n    \n/profile", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-dynamic-dependency-injection", 
            "text": "Here we are working on Dynamic-Dependency-Injection. You could find this \nrepo on Github -   Dynamic-Dependency-Injection", 
            "title": "Welcome to Dynamic Dependency Injection"
        }, 
        {
            "location": "/#basics-about-di-frameworks", 
            "text": "If you want to know a little bit more about DI-Frameworks and the comparison between some of them\nyou could read the following.         DI Frameworks - hidden pearls    from  Sven Ruppert    Or if you want to see it as a talk...", 
            "title": "Basics about DI -Frameworks"
        }, 
        {
            "location": "/#what-goal-we-want-to-reach", 
            "text": "After a longer time using differend DI-Frameworks I decided to start with an internal research project to explore the possibilities to write a different DI-Framework. Something that would fit better to my needs to work with old and big legacy projects. Based on the ProxyBuilder -  www.proxybuilder.org  that was born during the time\nI was writing the german Book  \"Dynamic Proxies\"  with  Dr. Heinz Kabutz , I started to use this for the implementations of my first version of the  Dynamic Dependency Injection   project.   The goals I wanted to reach are:   as less as possible Binding Code  easy and simple Lifecycle  technical and business Model-Validation  easy debugging  easy mocking  Dynamic Context  only dependency to the JDK itself", 
            "title": "What goal we want to reach?"
        }, 
        {
            "location": "/#jump-start", 
            "text": "If you want to start using this project inside your project you could start with the following dependency \ninside your  pom.xml       dependency \n       groupId org.rapidpm.dynamic-cdi /groupId \n       artifactId rapidpm-dynamic-cdi /artifactId \n       version ***VERSION*** /version \n     /dependency   If you are using releases only you will get them from maven central. But if you want to use the developer snapshots too,\nyou have to use the maven central SNAPSHOT repository.  Add the following to your  settings.xml  to get the snapshots.      profile \n       id allow-snapshots /id \n       activation \n         activeByDefault true /activeByDefault \n       /activation \n       repositories \n         repository \n           id snapshots-repo /id \n           url https://oss.sonatype.org/content/repositories/snapshots /url \n           releases \n             enabled false /enabled \n           /releases \n           snapshots \n             enabled true /enabled \n             updatePolicy always /updatePolicy \n           /snapshots \n         /repository \n       /repositories \n     /profile", 
            "title": "Jump start"
        }, 
        {
            "location": "/injection/", 
            "text": "Injections\n\n\nHere I will explain the different ways to resolve what is the right implementation. This will ledd at some points \nto other chapters here at this website for more or detailed informations about the way it is realized.\n\n\nBut lets start with the Hello World.\n\n\nHow DDI will resolve the corresponding Implementation?\n\n\nPlease, check the description of a \nClassResolver\n \nand \nProducerResolver\n\n\nHere I will give you the full list of all combinations you could use with this Dynamic-Dependency Injection Framework.\nThis will help you to decide what kind of combinations are fitting best for you inside your project.\nOne thing that I could recommend to think about is, the way you want to write injected Mocks.\n\n\n@Inject Interface\n\n\nIf you write \n@Inject Interface\n the framework will use the following to resolv the corresponding implementation.\n\n\n\n\nInterface , no Impl. -\n \nException\n\n\n\n\nInterface , no Impl., 1 Producer for the Interface  -\n Producer for the Interface will be used\n\n\n\n\n\n\nInterface , 1 Impl. -\n will use the Impl.\n\n\n\n\nInterface , 1 Impl., 1 Producer for Impl. -\n Producer for the Impl will be used\n\n\nInterface , 1 Impl., n Producer for Impl. -\n \nException\n\n\nInterface , 1 Impl., 1 Producer for Interface -\n Producer for the Interface will be used\n\n\n\n\nInterface , 1 Impl., n Producer for Interface -\n \nException\n\n\n\n\n\n\nInterface , 1 Impl., 1 Producer for Interface , 1 Producer for Impl. -\n \nException\n\n\n\n\n\n\nInterface , n Impl. -\n \nException\n\n\n\n\nInterface , n Impl., 1 responsible ClassResolver -\n result of the ClassResolver will be used\n\n\nInterface , n Impl., 1 Producer for Interface -\n Producer for the Interface will be used\n\n\n\n\nInterface , n Impl., 1-n Producer for Impl. -\n \nException\n\n\n\n\n\n\nInterface , n Impl., 1 responsible ClassResolver, 1 Producer for Interface -\n Producer for the Interface will be used\n\n\n\n\nInterface , n Impl., 1 responsible ClassResolver, 1-n Producer for Impl. -\n will use the resolved Class or corresponding Producer if available\n\n\n\n\nInterface , n Impl., n responsible ClassResolver -\n \nException\n\n\n\n\n\n\nInterface, 1 Impl., n Producer for Impl, 1 ProducerResolver for Impl -\n selected Producer from ProducerResolver\n\n\n\n\nInterface, n Impl., 1 responsible ClassResolver, 0-n Producer for every Impl, 1 ProducerResolver for every Impl -\n selected Producer from ProducerResolver, for selected Impl from ClassResolver\n\n\n\n\n@Inject Impl.\n\n\nIf you write \n@Inject Impl.\n there are not so many possible ways that the framework could go.\n\n\n\n\nImpl. -\n will use the Impl.\n\n\nImpl., 1 Producer -\n will use the Producer for the Impl.\n\n\nImpl., n Producer -\n \nException\n\n\n\n\nHow to write Mocks for Interfaces or classes ?\n\n\nYou can use this framework for the mocking too. The concept is based on the Designpattern \nObjectAdapter\n.\nYou can have too versions of an \nObjectAdapter\n , based on the implementations the \nProxyBuilder\n will give you. \nVersion one is a \nDynamicObjectAdapter\n. This you could only use if you have an interface available.\nThe \nDynamicObjectAdapterBuilder\n will be created during the compile phase if you annotate the corresponding interface with the Annotation \n@DynamicObjectAdapterBuilder\n. Please check the documentation about the \nDynamicObjectAdapter\n for more details.\n\n\nVersion two is a \nStaticObjectAdapter\n. This you could use for Interfaces and Classes. To create a \nStaticObjectAdapter\n for your target you have to annotate the the target class or interface with the Annotation \n@StaticObjectAdapter\n. After the compile phase you could find the generated classes at \ntarget/generated-sources\n (if you are using maven).\n\n\nMocking\n\n\nIf you want to use a Mock for an jUnitTest, you have to use a ClassResolver or ProducerResolver to make the decission for the Mock explicite for your test. The easiest way is the usage of an Producer that will create the Mock. With this you could mock something that is deep inside your system, without creating the full hierarchy with frameworks like Mockito. Mostly this will lead to constructions that are much more like the production system.\n\n\nexample with one interface and one production class\n\n\nInside the production source path you will have an interface and one implementation. \n\n\n  public interface Service {\n    String doWork(String txt);\n  }\n\n  public static class ServiceA implements Service {\n    public String doWork(String txt) {\n      return txt + \nA\n;\n    }\n  }\n\n\n\n\nDuring the runntime the solution is very simple, because there is only on implementation available. But now we would like \nto activate a Mock during the jUnit test. For this we need a second implementation called \nServiceB\n\n\n public static class ServiceB implements Service {\n    public String doWork(String txt) {\n      return txt + \nB\n;\n    }\n  }\n\n\n\n\nTo activate this mock only for the jUnit Tests we have to configer the DI Container in a way that the \nServiceB\n will be available.\nThis means, during the startup phase \n@Before\n we are clearing the existing Reflection Model to make sure there is no other config from any other test anymore. After this we re activating only production classes and the package from the test itself. \n\n\n  @Before\n  public void setUp() throws Exception {\n    DI.clearReflectionModel();\n    DI.activatePackages(\norg.rapidpm\n);\n    DI.activatePackages(this.getClass());\n  }\n\n\n\n\nNow we have the mock inside the reflection model, too. This means we have to give the container a possibility to resolve this. For this we have to create a \nClassResolver\n. This will be instanciated and asked for the solution. \n\n\n  @ResponsibleFor(Service.class)\n  public static class ServiceClassResolver implements ClassResolver\nService\n {\n    @Override\n    public Class\n? extends Service\n resolve(final Class\nService\n interf) {\n      return ServiceB.class;\n    }\n  }\n\n\n\n\nNow the container is able to ask the ClassResolver, what will be the right implementation to use. In our case, the mock.\n\n\nHere you can see, one of the jUnit Tests that we are using to test the ClassResolver. \nClassResolverTest014.java\n\n\n  @Before\n  public void setUp() throws Exception {\n    DI.clearReflectionModel();\n    DI.activatePackages(\norg.rapidpm\n);\n    DI.activatePackages(this.getClass());\n  }\n\n  public static Boolean toggle = true;\n\n  @Test\n  public void test001() throws Exception {\n    Assert.assertEquals(ServiceB.class, DI.activateDI(Service.class).getClass());\n    Assert.assertEquals(ServiceA.class, DI.activateDI(Service.class).getClass());\n    Assert.assertEquals(ServiceB.class, DI.activateDI(Service.class).getClass());\n    DI.clearReflectionModel();\n  }\n\n  public interface Service {\n    String doWork(String txt);\n  }\n\n  public static class ServiceA implements Service {\n    public String doWork(String txt) {\n      return txt + \nA\n;\n    }\n  }\n\n  public static class ServiceB implements Service {\n    public String doWork(String txt) {\n      return txt + \nB\n;\n    }\n  }\n\n  @ResponsibleFor(Service.class)\n  public static class ServiceClassResolver implements ClassResolver\nService\n {\n    @Override\n    public Class\n? extends Service\n resolve(final Class\nService\n interf) {\n      toggle = !toggle;\n      System.out.println(\ntoggle = \n + toggle);\n      return (toggle) ? ServiceA.class : ServiceB.class;\n    }\n  }\n\n\n\n\n\nCustomizing the Injection Target\n\n\nIf you want to cusomize the injection target, for example to get an VirtualProxy, you have different ways to reach this goal.\nOne is the explicite way inside the source code.\nYou can combine an \n@Inject\n with a \n@Proxy(virtual=true)\n and it will use the same implementing class, but as a VirtualProxy.\n\n\n@Inject @Proxy(virtual=true) Service service; \n\n\n\n\nBu you can do more lie the following.", 
            "title": "Injection"
        }, 
        {
            "location": "/injection/#injections", 
            "text": "Here I will explain the different ways to resolve what is the right implementation. This will ledd at some points \nto other chapters here at this website for more or detailed informations about the way it is realized.  But lets start with the Hello World.", 
            "title": "Injections"
        }, 
        {
            "location": "/injection/#how-ddi-will-resolve-the-corresponding-implementation", 
            "text": "Please, check the description of a  ClassResolver  \nand  ProducerResolver  Here I will give you the full list of all combinations you could use with this Dynamic-Dependency Injection Framework.\nThis will help you to decide what kind of combinations are fitting best for you inside your project.\nOne thing that I could recommend to think about is, the way you want to write injected Mocks.  @Inject Interface  If you write  @Inject Interface  the framework will use the following to resolv the corresponding implementation.   Interface , no Impl. -   Exception   Interface , no Impl., 1 Producer for the Interface  -  Producer for the Interface will be used    Interface , 1 Impl. -  will use the Impl.   Interface , 1 Impl., 1 Producer for Impl. -  Producer for the Impl will be used  Interface , 1 Impl., n Producer for Impl. -   Exception  Interface , 1 Impl., 1 Producer for Interface -  Producer for the Interface will be used   Interface , 1 Impl., n Producer for Interface -   Exception    Interface , 1 Impl., 1 Producer for Interface , 1 Producer for Impl. -   Exception    Interface , n Impl. -   Exception   Interface , n Impl., 1 responsible ClassResolver -  result of the ClassResolver will be used  Interface , n Impl., 1 Producer for Interface -  Producer for the Interface will be used   Interface , n Impl., 1-n Producer for Impl. -   Exception    Interface , n Impl., 1 responsible ClassResolver, 1 Producer for Interface -  Producer for the Interface will be used   Interface , n Impl., 1 responsible ClassResolver, 1-n Producer for Impl. -  will use the resolved Class or corresponding Producer if available   Interface , n Impl., n responsible ClassResolver -   Exception    Interface, 1 Impl., n Producer for Impl, 1 ProducerResolver for Impl -  selected Producer from ProducerResolver   Interface, n Impl., 1 responsible ClassResolver, 0-n Producer for every Impl, 1 ProducerResolver for every Impl -  selected Producer from ProducerResolver, for selected Impl from ClassResolver   @Inject Impl.  If you write  @Inject Impl.  there are not so many possible ways that the framework could go.   Impl. -  will use the Impl.  Impl., 1 Producer -  will use the Producer for the Impl.  Impl., n Producer -   Exception", 
            "title": "How DDI will resolve the corresponding Implementation?"
        }, 
        {
            "location": "/injection/#how-to-write-mocks-for-interfaces-or-classes", 
            "text": "You can use this framework for the mocking too. The concept is based on the Designpattern  ObjectAdapter .\nYou can have too versions of an  ObjectAdapter  , based on the implementations the  ProxyBuilder  will give you. \nVersion one is a  DynamicObjectAdapter . This you could only use if you have an interface available.\nThe  DynamicObjectAdapterBuilder  will be created during the compile phase if you annotate the corresponding interface with the Annotation  @DynamicObjectAdapterBuilder . Please check the documentation about the  DynamicObjectAdapter  for more details.  Version two is a  StaticObjectAdapter . This you could use for Interfaces and Classes. To create a  StaticObjectAdapter  for your target you have to annotate the the target class or interface with the Annotation  @StaticObjectAdapter . After the compile phase you could find the generated classes at  target/generated-sources  (if you are using maven).  Mocking  If you want to use a Mock for an jUnitTest, you have to use a ClassResolver or ProducerResolver to make the decission for the Mock explicite for your test. The easiest way is the usage of an Producer that will create the Mock. With this you could mock something that is deep inside your system, without creating the full hierarchy with frameworks like Mockito. Mostly this will lead to constructions that are much more like the production system.  example with one interface and one production class  Inside the production source path you will have an interface and one implementation.     public interface Service {\n    String doWork(String txt);\n  }\n\n  public static class ServiceA implements Service {\n    public String doWork(String txt) {\n      return txt +  A ;\n    }\n  }  During the runntime the solution is very simple, because there is only on implementation available. But now we would like \nto activate a Mock during the jUnit test. For this we need a second implementation called  ServiceB   public static class ServiceB implements Service {\n    public String doWork(String txt) {\n      return txt +  B ;\n    }\n  }  To activate this mock only for the jUnit Tests we have to configer the DI Container in a way that the  ServiceB  will be available.\nThis means, during the startup phase  @Before  we are clearing the existing Reflection Model to make sure there is no other config from any other test anymore. After this we re activating only production classes and the package from the test itself.     @Before\n  public void setUp() throws Exception {\n    DI.clearReflectionModel();\n    DI.activatePackages( org.rapidpm );\n    DI.activatePackages(this.getClass());\n  }  Now we have the mock inside the reflection model, too. This means we have to give the container a possibility to resolve this. For this we have to create a  ClassResolver . This will be instanciated and asked for the solution.     @ResponsibleFor(Service.class)\n  public static class ServiceClassResolver implements ClassResolver Service  {\n    @Override\n    public Class ? extends Service  resolve(final Class Service  interf) {\n      return ServiceB.class;\n    }\n  }  Now the container is able to ask the ClassResolver, what will be the right implementation to use. In our case, the mock.  Here you can see, one of the jUnit Tests that we are using to test the ClassResolver.  ClassResolverTest014.java    @Before\n  public void setUp() throws Exception {\n    DI.clearReflectionModel();\n    DI.activatePackages( org.rapidpm );\n    DI.activatePackages(this.getClass());\n  }\n\n  public static Boolean toggle = true;\n\n  @Test\n  public void test001() throws Exception {\n    Assert.assertEquals(ServiceB.class, DI.activateDI(Service.class).getClass());\n    Assert.assertEquals(ServiceA.class, DI.activateDI(Service.class).getClass());\n    Assert.assertEquals(ServiceB.class, DI.activateDI(Service.class).getClass());\n    DI.clearReflectionModel();\n  }\n\n  public interface Service {\n    String doWork(String txt);\n  }\n\n  public static class ServiceA implements Service {\n    public String doWork(String txt) {\n      return txt +  A ;\n    }\n  }\n\n  public static class ServiceB implements Service {\n    public String doWork(String txt) {\n      return txt +  B ;\n    }\n  }\n\n  @ResponsibleFor(Service.class)\n  public static class ServiceClassResolver implements ClassResolver Service  {\n    @Override\n    public Class ? extends Service  resolve(final Class Service  interf) {\n      toggle = !toggle;\n      System.out.println( toggle =   + toggle);\n      return (toggle) ? ServiceA.class : ServiceB.class;\n    }\n  }", 
            "title": "How to write Mocks for Interfaces or classes ?"
        }, 
        {
            "location": "/injection/#customizing-the-injection-target", 
            "text": "If you want to cusomize the injection target, for example to get an VirtualProxy, you have different ways to reach this goal.\nOne is the explicite way inside the source code.\nYou can combine an  @Inject  with a  @Proxy(virtual=true)  and it will use the same implementing class, but as a VirtualProxy.  @Inject @Proxy(virtual=true) Service service;   Bu you can do more lie the following.", 
            "title": "Customizing the Injection Target"
        }, 
        {
            "location": "/creation/", 
            "text": "Dynamic Dependency Injection\n\n\nwe will start soon...\n\n\nIf you want to have a small overview about some DI - Frameworks.\n\n\nTalk: \nDI Frameworks - Some hidden Pearls", 
            "title": "Creation"
        }, 
        {
            "location": "/creation/#dynamic-dependency-injection", 
            "text": "we will start soon...  If you want to have a small overview about some DI - Frameworks.  Talk:  DI Frameworks - Some hidden Pearls", 
            "title": "Dynamic Dependency Injection"
        }, 
        {
            "location": "/resolver/", 
            "text": "Dynamic Dependency Injection\n\n\nwe will start soon...\n\n\nIf you want to have a small overview about some DI - Frameworks.\n\n\nTalk: \nDI Frameworks - Some hidden Pearls", 
            "title": "Resolver"
        }, 
        {
            "location": "/resolver/#dynamic-dependency-injection", 
            "text": "we will start soon...  If you want to have a small overview about some DI - Frameworks.  Talk:  DI Frameworks - Some hidden Pearls", 
            "title": "Dynamic Dependency Injection"
        }, 
        {
            "location": "/optionals/", 
            "text": "Dynamic Dependency Injection\n\n\nwe will start soon...\n\n\nIf you want to have a small overview about some DI - Frameworks.\n\n\nTalk: \nDI Frameworks - Some hidden Pearls", 
            "title": "Optionals"
        }, 
        {
            "location": "/optionals/#dynamic-dependency-injection", 
            "text": "we will start soon...  If you want to have a small overview about some DI - Frameworks.  Talk:  DI Frameworks - Some hidden Pearls", 
            "title": "Dynamic Dependency Injection"
        }, 
        {
            "location": "/projectinfos/", 
            "text": "Project - Informations\n\n\nThis project is sponsored with OpenSource Licences from \n\n\n\n\n\n\nTeamCity\n\n\nYou can login as \nguest\n at \nTeamCity\n to see all build configurations and the actual\nstate of \ndevelop-\n and \nmaster-\nbranch.\n\n\nSonarCube\n\n\nFor the coverage and other metrics we are using our \nSonarCube\n installation. Feel free to check it.\n\n\nVersionEye\n\n\nWe are checking all dependencies with VersionEye. We try to use the latest versions \nfor all parts of the project.\n\n\nmaster:\n\n[Dependency Status]\n\n\ndevelop:\n\n[Dependency Status]\n\n\nUpsource\n\n\nIf you want to browse the code, feel free to try our \nUpsource\n. \nWe are using this for Team - Code-Reviews too. If you have any questions to the code, mark the part you are interested in and send this link to us with your questions.\n\n\n \n\n\n\n \n \nUpsource - RapidPM - Dynamic Dependency Injection\n \n sponsored by from \nMacros reply GmbH\n \n\n\nYoutrack\n\n\nFor the versionplanning and bugtracking we are using \n \n \nYoutrack - RapidPM - Dynamic Dependency Injection", 
            "title": "Projectinfos"
        }, 
        {
            "location": "/projectinfos/#project-informations", 
            "text": "This project is sponsored with OpenSource Licences from", 
            "title": "Project - Informations"
        }, 
        {
            "location": "/projectinfos/#teamcity", 
            "text": "You can login as  guest  at  TeamCity  to see all build configurations and the actual\nstate of  develop-  and  master- branch.", 
            "title": "TeamCity"
        }, 
        {
            "location": "/projectinfos/#sonarcube", 
            "text": "For the coverage and other metrics we are using our  SonarCube  installation. Feel free to check it.", 
            "title": "SonarCube"
        }, 
        {
            "location": "/projectinfos/#versioneye", 
            "text": "We are checking all dependencies with VersionEye. We try to use the latest versions \nfor all parts of the project.  master: [Dependency Status]  develop: [Dependency Status]", 
            "title": "VersionEye"
        }, 
        {
            "location": "/projectinfos/#upsource", 
            "text": "If you want to browse the code, feel free to try our  Upsource . \nWe are using this for Team - Code-Reviews too. If you have any questions to the code, mark the part you are interested in and send this link to us with your questions.         Upsource - RapidPM - Dynamic Dependency Injection    sponsored by from  Macros reply GmbH", 
            "title": "Upsource"
        }, 
        {
            "location": "/projectinfos/#youtrack", 
            "text": "For the versionplanning and bugtracking we are using      Youtrack - RapidPM - Dynamic Dependency Injection", 
            "title": "Youtrack"
        }, 
        {
            "location": "/infos/", 
            "text": "Additional Infos\n\n\nIf you want to have an overview of the Proxy-Pattern itself I can recommend\nthe following sources.\n\n\nJava One 2015\n\n\n \n\n\n\n \n \nJavaOne 2015 Tutorial - Proxy DeepDive\n \n from \nSven Ruppert\n \n\n\n\n\n(soon) a free gitbook about Pattern and more \nJava Fundamentals in english\n\n\n\n\nDynamic Proxies\n\n\nThe book \nDynamic Proxies\n from \nDr. Heinz Kabutz\n and \nSven Ruppert\n\n\nJava Fundamentals\n\n\nA free german gitbook about Pattern and more \nJava Fundamentals", 
            "title": "Infos"
        }, 
        {
            "location": "/infos/#additional-infos", 
            "text": "If you want to have an overview of the Proxy-Pattern itself I can recommend\nthe following sources.", 
            "title": "Additional Infos"
        }, 
        {
            "location": "/infos/#java-one-2015", 
            "text": "JavaOne 2015 Tutorial - Proxy DeepDive    from  Sven Ruppert     (soon) a free gitbook about Pattern and more  Java Fundamentals in english", 
            "title": "Java One 2015"
        }, 
        {
            "location": "/infos/#dynamic-proxies", 
            "text": "The book  Dynamic Proxies  from  Dr. Heinz Kabutz  and  Sven Ruppert", 
            "title": "Dynamic Proxies"
        }, 
        {
            "location": "/infos/#java-fundamentals", 
            "text": "A free german gitbook about Pattern and more  Java Fundamentals", 
            "title": "Java Fundamentals"
        }, 
        {
            "location": "/about/", 
            "text": "About\n\n\nBlog:\n \nwww.rapidpm.org\n\n\nWeb:\n \nwww.sven-ruppert.de\n\n\nTwitter:\n\u00a0\n@SvenRuppert\n\n\nLandry:\n \nhttp://lanyrd.com/profile/svenruppert/\n\n\nPublications:\n\u00a0\nhttp://www.rapidpm.org/publications/index.html\n\n\nTalks:\n\u00a0\nhttp://www.rapidpm.org/conferences/index.html\n\n\nLinkedin:\n\u00a0\nhttps://www.linkedin.com/in/svenruppert\n \n\n\nImpressum (for german law)\n\n\nAngaben gem\u00e4\u00df \u00a7 5 TMG:\n\n\nSven Ruppert\n\n\nHans-Keis-Str 41\n\n\n82049\n Pullach\n\n\nKontakt:\n\n\nTelefon:\n    491704546307\n\n\nE-Mail:\n sven.ruppert@gmail.com\n\n\nQuelle: http://www.e-recht24.de\n\n\nHaftungsausschluss (Disclaimer)\n\n\nHaftung f\u00fcr Inhalte\n\n\nAls Diensteanbieter sind wir gem\u00e4\u00df \u00a7 7 Abs.1 TMG f\u00fcr eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach \u00a7\u00a7 8 bis 10 TMG sind wir als Diensteanbieter jedoch nicht verpflichtet, \u00fcbermittelte oder gespeicherte fremde Informationen zu \u00fcberwachen oder nach Umst\u00e4nden zu forschen, die auf eine rechtswidrige T\u00e4tigkeit hinweisen. Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unber\u00fchrt. Eine diesbez\u00fcgliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung m\u00f6glich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen.\n\n\nHaftung f\u00fcr Links\n\n\nUnser Angebot enth\u00e4lt Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb k\u00f6nnen wir f\u00fcr diese fremden Inhalte auch keine Gew\u00e4hr \u00fcbernehmen. F\u00fcr die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf m\u00f6gliche Rechtsverst\u00f6\u00dfe \u00fcberpr\u00fcft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.\n\n\nUrheberrecht\n\n\nDie durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielf\u00e4ltigung, Bearbeitung, Verbreitung und jede Art der Verwertung au\u00dferhalb der Grenzen des Urheberrechtes bed\u00fcrfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur f\u00fcr den privaten, nicht kommerziellen Gebrauch gestattet. Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.\n\n\nQuellen: eRecht24\n\n\nDatenschutzerkl\u00e4rung:\n\n\nDatenschutz\n\n\nDie Nutzung unserer Webseite ist in der Regel ohne Angabe personenbezogener Daten m\u00f6glich. Soweit auf unseren Seiten personenbezogene Daten (beispielsweise Name, Anschrift oder eMail-Adressen) erhoben werden, erfolgt dies, soweit m\u00f6glich, stets auf freiwilliger Basis. Diese Daten werden ohne Ihre ausdr\u00fcckliche Zustimmung nicht an Dritte weitergegeben.\n\n\nWir weisen darauf hin, dass die Daten\u00fcbertragung im Internet (z.B. bei der Kommunikation per E-Mail) Sicherheitsl\u00fccken aufweisen kann. Ein l\u00fcckenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht m\u00f6glich.\n\n\nDer Nutzung von im Rahmen der Impressumspflicht ver\u00f6ffentlichten Kontaktdaten durch Dritte zur \u00dcbersendung von nicht ausdr\u00fccklich angeforderter Werbung und Informationsmaterialien wird hiermit ausdr\u00fccklich widersprochen. Die Betreiber der Seiten behalten sich ausdr\u00fccklich rechtliche Schritte im Falle der unverlangten Zusendung von Werbeinformationen, etwa durch Spam-Mails, vor.\n\n\nDatenschutzerkl\u00e4rung f\u00fcr die Nutzung von Facebook-Plugins (Like-Button)\n\n\nAuf unseren Seiten sind Plugins des sozialen Netzwerks Facebook (Facebook Inc., 1601 Willow Road, Menlo Park, California, 94025, USA) integriert. Die Facebook-Plugins erkennen Sie an dem Facebook-Logo oder dem \"Like-Button\" (\"Gef\u00e4llt mir\") auf unserer Seite. Eine \u00dcbersicht \u00fcber die Facebook-Plugins finden Sie hier: http://developers.facebook.com/docs/plugins/.\nWenn Sie unsere Seiten besuchen, wird \u00fcber das Plugin eine direkte Verbindung zwischen Ihrem Browser und dem Facebook-Server hergestellt. Facebook erh\u00e4lt dadurch die Information, dass Sie mit Ihrer IP-Adresse unsere Seite besucht haben. Wenn Sie den Facebook \"Like-Button\" anklicken w\u00e4hrend Sie in Ihrem Facebook-Account eingeloggt sind, k\u00f6nnen Sie die Inhalte unserer Seiten auf Ihrem Facebook-Profil verlinken. Dadurch kann Facebook den Besuch unserer Seiten Ihrem Benutzerkonto zuordnen. Wir weisen darauf hin, dass wir als Anbieter der Seiten keine Kenntnis vom Inhalt der \u00fcbermittelten Daten sowie deren Nutzung durch Facebook erhalten. Weitere Informationen hierzu finden Sie in der Datenschutzerkl\u00e4rung von facebook unter http://de-de.facebook.com/policy.php\n\n\nWenn Sie nicht w\u00fcnschen, dass Facebook den Besuch unserer Seiten Ihrem Facebook-Nutzerkonto zuordnen kann, loggen Sie sich bitte aus Ihrem Facebook-Benutzerkonto aus.\n\n\nDatenschutzerkl\u00e4rung f\u00fcr die Nutzung von Google Analytics\n\n\nDiese Website benutzt Google Analytics, einen Webanalysedienst der Google Inc. (\"Google\"). Google Analytics verwendet sog. \"Cookies\", Textdateien, die auf Ihrem Computer gespeichert werden und die eine Analyse der Benutzung der Website durch Sie erm\u00f6glichen. Die durch den Cookie erzeugten Informationen \u00fcber Ihre Benutzung dieser Website werden in der Regel an einen Server von Google in den USA \u00fcbertragen und dort gespeichert. Im Falle der Aktivierung der IP-Anonymisierung auf dieser Webseite wird Ihre IP-Adresse von Google jedoch innerhalb von Mitgliedstaaten der Europ\u00e4ischen Union oder in anderen Vertragsstaaten des Abkommens \u00fcber den Europ\u00e4ischen Wirtschaftsraum zuvor gek\u00fcrzt.\n\n\nNur in Ausnahmef\u00e4llen wird die volle IP-Adresse an einen Server von Google in den USA \u00fcbertragen und dort gek\u00fcrzt. Im Auftrag des Betreibers dieser Website wird Google diese Informationen benutzen, um Ihre Nutzung der Website auszuwerten, um Reports \u00fcber die Websiteaktivit\u00e4ten zusammenzustellen und um weitere mit der Websitenutzung und der Internetnutzung verbundene Dienstleistungen gegen\u00fcber dem Websitebetreiber zu erbringen. Die im Rahmen von Google Analytics von Ihrem Browser \u00fcbermittelte IP-Adresse wird nicht mit anderen Daten von Google zusammengef\u00fchrt.\n\n\nSie k\u00f6nnen die Speicherung der Cookies durch eine entsprechende Einstellung Ihrer Browser-Software verhindern; wir weisen Sie jedoch darauf hin, dass Sie in diesem Fall gegebenenfalls nicht s\u00e4mtliche Funktionen dieser Website vollumf\u00e4nglich werden nutzen k\u00f6nnen. Sie k\u00f6nnen dar\u00fcber hinaus die Erfassung der durch das Cookie erzeugten und auf Ihre Nutzung der Website bezogenen Daten (inkl. Ihrer IP-Adresse) an Google sowie die Verarbeitung dieser Daten durch Google verhindern, indem sie das unter dem folgenden Link verf\u00fcgbare Browser-Plugin herunterladen und installieren: http://tools.google.com/dlpage/gaoptout?hl=de.\n\n\nDatenschutzerkl\u00e4rung f\u00fcr die Nutzung von Google Adsense\n\n\nDiese Website benutzt Google AdSense, einen Dienst zum Einbinden von Werbeanzeigen der Google Inc. (\"Google\"). Google AdSense verwendet sog. \"Cookies\", Textdateien, die auf Ihrem Computer gespeichert werden und die eine Analyse der Benutzung der Website erm\u00f6glicht. Google AdSense verwendet auch so genannte Web Beacons (unsichtbare Grafiken). Durch diese Web Beacons k\u00f6nnen Informationen wie der Besucherverkehr auf diesen Seiten ausgewertet werden.\n\n\nDie durch Cookies und Web Beacons erzeugten Informationen \u00fcber die Benutzung dieser Website (einschlie\u00dflich Ihrer IP-Adresse) und Auslieferung von Werbeformaten werden an einen Server von Google in den USA \u00fcbertragen und dort gespeichert. Diese Informationen k\u00f6nnen von Google an Vertragspartner von Google weiter gegeben werden. Google wird Ihre IP-Adresse jedoch nicht mit anderen von Ihnen gespeicherten Daten zusammenf\u00fchren.\n\n\nSie k\u00f6nnen die Installation der Cookies durch eine entsprechende Einstellung Ihrer Browser Software verhindern; wir weisen Sie jedoch darauf hin, dass Sie in diesem Fall gegebenenfalls nicht s\u00e4mtliche Funktionen dieser Website voll umf\u00e4nglich nutzen k\u00f6nnen. Durch die Nutzung dieser Website erkl\u00e4ren Sie sich mit der Bearbeitung der \u00fcber Sie erhobenen Daten durch Google in der zuvor beschriebenen Art und Weise und zu dem zuvor benannten Zweck einverstanden.\n\n\nDatenschutzerkl\u00e4rung f\u00fcr die Nutzung von Google +1\n\n\nErfassung und Weitergabe von Informationen:\nMithilfe der Google +1-Schaltfl\u00e4che k\u00f6nnen Sie Informationen weltweit ver\u00f6ffentlichen. \u00dcber die Google +1-Schaltfl\u00e4che erhalten Sie und andere Nutzer personalisierte Inhalte von Google und unseren Partnern. Google speichert sowohl die Information, dass Sie f\u00fcr einen Inhalt +1 gegeben haben, als auch Informationen \u00fcber die Seite, die Sie beim Klicken auf +1 angesehen haben. Ihre +1 k\u00f6nnen als Hinweise zusammen mit Ihrem Profilnamen und Ihrem Foto in Google-Diensten, wie etwa in Suchergebnissen oder in Ihrem Google-Profil, oder an anderen Stellen auf Websites und Anzeigen im Internet eingeblendet werden.\nGoogle zeichnet Informationen \u00fcber Ihre +1-Aktivit\u00e4ten auf, um die Google-Dienste f\u00fcr Sie und andere zu verbessern. Um die Google +1-Schaltfl\u00e4che verwenden zu k\u00f6nnen, ben\u00f6tigen Sie ein weltweit sichtbares, \u00f6ffentliches Google-Profil, das zumindest den f\u00fcr das Profil gew\u00e4hlten Namen enthalten muss. Dieser Name wird in allen Google-Diensten verwendet. In manchen F\u00e4llen kann dieser Name auch einen anderen Namen ersetzen, den Sie beim Teilen von Inhalten \u00fcber Ihr Google-Konto verwendet haben. Die Identit\u00e4t Ihres Google-Profils kann Nutzern angezeigt werden, die Ihre E-Mail-Adresse kennen oder \u00fcber andere identifizierende Informationen von Ihnen verf\u00fcgen.\n\n\nVerwendung der erfassten Informationen:\nNeben den oben erl\u00e4uterten Verwendungszwecken werden die von Ihnen bereitgestellten Informationen gem\u00e4\u00df den geltenden Google-Datenschutzbestimmungen genutzt. Google ver\u00f6ffentlicht m\u00f6glicherweise zusammengefasste Statistiken \u00fcber die +1-Aktivit\u00e4ten der Nutzer bzw. gibt diese an Nutzer und Partner weiter, wie etwa Publisher, Inserenten oder verbundene Websites.\n\n\nDatenschutzerkl\u00e4rung f\u00fcr die Nutzung von Twitter\n\n\nAuf unseren Seiten sind Funktionen des Dienstes Twitter eingebunden. Diese Funktionen werden angeboten durch die Twitter Inc., Twitter, Inc. 1355 Market St, Suite 900, San Francisco, CA 94103, USA. Durch das Benutzen von Twitter und der Funktion \"Re-Tweet\" werden die von Ihnen besuchten Webseiten mit Ihrem Twitter-Account verkn\u00fcpft und anderen Nutzern bekannt gegeben. Dabei werden auch Daten an Twitter \u00fcbertragen.\n\n\nWir weisen darauf hin, dass wir als Anbieter der Seiten keine Kenntnis vom Inhalt der \u00fcbermittelten Daten sowie deren Nutzung durch Twitter erhalten. Weitere Informationen hierzu finden Sie in der Datenschutzerkl\u00e4rung von Twitter unter http://twitter.com/privacy.\n\n\nIhre Datenschutzeinstellungen bei Twitter k\u00f6nnen Sie in den Konto-Einstellungen unter http://twitter.com/account/settings \u00e4ndern.\n\n\nQuellenangaben: eRecht24, Facebook Datenschutzerkl\u00e4rung, Datenschutzerkl\u00e4rung f\u00fcr Google Analytics, Google Adsense Haftungsausschluss, Google +1 Datenschutzerkl\u00e4rung, Datenschutzerkl\u00e4rung f\u00fcr Twitter", 
            "title": "About"
        }, 
        {
            "location": "/about/#about", 
            "text": "Blog:   www.rapidpm.org  Web:   www.sven-ruppert.de  Twitter: \u00a0 @SvenRuppert  Landry:   http://lanyrd.com/profile/svenruppert/  Publications: \u00a0 http://www.rapidpm.org/publications/index.html  Talks: \u00a0 http://www.rapidpm.org/conferences/index.html  Linkedin: \u00a0 https://www.linkedin.com/in/svenruppert", 
            "title": "About"
        }, 
        {
            "location": "/about/#impressum-for-german-law", 
            "text": "Angaben gem\u00e4\u00df \u00a7 5 TMG:  Sven Ruppert  Hans-Keis-Str 41  82049  Pullach  Kontakt:  Telefon:     491704546307  E-Mail:  sven.ruppert@gmail.com  Quelle: http://www.e-recht24.de", 
            "title": "Impressum (for german law)"
        }, 
        {
            "location": "/about/#haftungsausschluss-disclaimer", 
            "text": "Haftung f\u00fcr Inhalte  Als Diensteanbieter sind wir gem\u00e4\u00df \u00a7 7 Abs.1 TMG f\u00fcr eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach \u00a7\u00a7 8 bis 10 TMG sind wir als Diensteanbieter jedoch nicht verpflichtet, \u00fcbermittelte oder gespeicherte fremde Informationen zu \u00fcberwachen oder nach Umst\u00e4nden zu forschen, die auf eine rechtswidrige T\u00e4tigkeit hinweisen. Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unber\u00fchrt. Eine diesbez\u00fcgliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung m\u00f6glich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen.  Haftung f\u00fcr Links  Unser Angebot enth\u00e4lt Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb k\u00f6nnen wir f\u00fcr diese fremden Inhalte auch keine Gew\u00e4hr \u00fcbernehmen. F\u00fcr die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf m\u00f6gliche Rechtsverst\u00f6\u00dfe \u00fcberpr\u00fcft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.  Urheberrecht  Die durch die Seitenbetreiber erstellten Inhalte und Werke auf diesen Seiten unterliegen dem deutschen Urheberrecht. Die Vervielf\u00e4ltigung, Bearbeitung, Verbreitung und jede Art der Verwertung au\u00dferhalb der Grenzen des Urheberrechtes bed\u00fcrfen der schriftlichen Zustimmung des jeweiligen Autors bzw. Erstellers. Downloads und Kopien dieser Seite sind nur f\u00fcr den privaten, nicht kommerziellen Gebrauch gestattet. Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.  Quellen: eRecht24  Datenschutzerkl\u00e4rung:  Datenschutz  Die Nutzung unserer Webseite ist in der Regel ohne Angabe personenbezogener Daten m\u00f6glich. Soweit auf unseren Seiten personenbezogene Daten (beispielsweise Name, Anschrift oder eMail-Adressen) erhoben werden, erfolgt dies, soweit m\u00f6glich, stets auf freiwilliger Basis. Diese Daten werden ohne Ihre ausdr\u00fcckliche Zustimmung nicht an Dritte weitergegeben.  Wir weisen darauf hin, dass die Daten\u00fcbertragung im Internet (z.B. bei der Kommunikation per E-Mail) Sicherheitsl\u00fccken aufweisen kann. Ein l\u00fcckenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht m\u00f6glich.  Der Nutzung von im Rahmen der Impressumspflicht ver\u00f6ffentlichten Kontaktdaten durch Dritte zur \u00dcbersendung von nicht ausdr\u00fccklich angeforderter Werbung und Informationsmaterialien wird hiermit ausdr\u00fccklich widersprochen. Die Betreiber der Seiten behalten sich ausdr\u00fccklich rechtliche Schritte im Falle der unverlangten Zusendung von Werbeinformationen, etwa durch Spam-Mails, vor.  Datenschutzerkl\u00e4rung f\u00fcr die Nutzung von Facebook-Plugins (Like-Button)  Auf unseren Seiten sind Plugins des sozialen Netzwerks Facebook (Facebook Inc., 1601 Willow Road, Menlo Park, California, 94025, USA) integriert. Die Facebook-Plugins erkennen Sie an dem Facebook-Logo oder dem \"Like-Button\" (\"Gef\u00e4llt mir\") auf unserer Seite. Eine \u00dcbersicht \u00fcber die Facebook-Plugins finden Sie hier: http://developers.facebook.com/docs/plugins/.\nWenn Sie unsere Seiten besuchen, wird \u00fcber das Plugin eine direkte Verbindung zwischen Ihrem Browser und dem Facebook-Server hergestellt. Facebook erh\u00e4lt dadurch die Information, dass Sie mit Ihrer IP-Adresse unsere Seite besucht haben. Wenn Sie den Facebook \"Like-Button\" anklicken w\u00e4hrend Sie in Ihrem Facebook-Account eingeloggt sind, k\u00f6nnen Sie die Inhalte unserer Seiten auf Ihrem Facebook-Profil verlinken. Dadurch kann Facebook den Besuch unserer Seiten Ihrem Benutzerkonto zuordnen. Wir weisen darauf hin, dass wir als Anbieter der Seiten keine Kenntnis vom Inhalt der \u00fcbermittelten Daten sowie deren Nutzung durch Facebook erhalten. Weitere Informationen hierzu finden Sie in der Datenschutzerkl\u00e4rung von facebook unter http://de-de.facebook.com/policy.php  Wenn Sie nicht w\u00fcnschen, dass Facebook den Besuch unserer Seiten Ihrem Facebook-Nutzerkonto zuordnen kann, loggen Sie sich bitte aus Ihrem Facebook-Benutzerkonto aus.  Datenschutzerkl\u00e4rung f\u00fcr die Nutzung von Google Analytics  Diese Website benutzt Google Analytics, einen Webanalysedienst der Google Inc. (\"Google\"). Google Analytics verwendet sog. \"Cookies\", Textdateien, die auf Ihrem Computer gespeichert werden und die eine Analyse der Benutzung der Website durch Sie erm\u00f6glichen. Die durch den Cookie erzeugten Informationen \u00fcber Ihre Benutzung dieser Website werden in der Regel an einen Server von Google in den USA \u00fcbertragen und dort gespeichert. Im Falle der Aktivierung der IP-Anonymisierung auf dieser Webseite wird Ihre IP-Adresse von Google jedoch innerhalb von Mitgliedstaaten der Europ\u00e4ischen Union oder in anderen Vertragsstaaten des Abkommens \u00fcber den Europ\u00e4ischen Wirtschaftsraum zuvor gek\u00fcrzt.  Nur in Ausnahmef\u00e4llen wird die volle IP-Adresse an einen Server von Google in den USA \u00fcbertragen und dort gek\u00fcrzt. Im Auftrag des Betreibers dieser Website wird Google diese Informationen benutzen, um Ihre Nutzung der Website auszuwerten, um Reports \u00fcber die Websiteaktivit\u00e4ten zusammenzustellen und um weitere mit der Websitenutzung und der Internetnutzung verbundene Dienstleistungen gegen\u00fcber dem Websitebetreiber zu erbringen. Die im Rahmen von Google Analytics von Ihrem Browser \u00fcbermittelte IP-Adresse wird nicht mit anderen Daten von Google zusammengef\u00fchrt.  Sie k\u00f6nnen die Speicherung der Cookies durch eine entsprechende Einstellung Ihrer Browser-Software verhindern; wir weisen Sie jedoch darauf hin, dass Sie in diesem Fall gegebenenfalls nicht s\u00e4mtliche Funktionen dieser Website vollumf\u00e4nglich werden nutzen k\u00f6nnen. Sie k\u00f6nnen dar\u00fcber hinaus die Erfassung der durch das Cookie erzeugten und auf Ihre Nutzung der Website bezogenen Daten (inkl. Ihrer IP-Adresse) an Google sowie die Verarbeitung dieser Daten durch Google verhindern, indem sie das unter dem folgenden Link verf\u00fcgbare Browser-Plugin herunterladen und installieren: http://tools.google.com/dlpage/gaoptout?hl=de.  Datenschutzerkl\u00e4rung f\u00fcr die Nutzung von Google Adsense  Diese Website benutzt Google AdSense, einen Dienst zum Einbinden von Werbeanzeigen der Google Inc. (\"Google\"). Google AdSense verwendet sog. \"Cookies\", Textdateien, die auf Ihrem Computer gespeichert werden und die eine Analyse der Benutzung der Website erm\u00f6glicht. Google AdSense verwendet auch so genannte Web Beacons (unsichtbare Grafiken). Durch diese Web Beacons k\u00f6nnen Informationen wie der Besucherverkehr auf diesen Seiten ausgewertet werden.  Die durch Cookies und Web Beacons erzeugten Informationen \u00fcber die Benutzung dieser Website (einschlie\u00dflich Ihrer IP-Adresse) und Auslieferung von Werbeformaten werden an einen Server von Google in den USA \u00fcbertragen und dort gespeichert. Diese Informationen k\u00f6nnen von Google an Vertragspartner von Google weiter gegeben werden. Google wird Ihre IP-Adresse jedoch nicht mit anderen von Ihnen gespeicherten Daten zusammenf\u00fchren.  Sie k\u00f6nnen die Installation der Cookies durch eine entsprechende Einstellung Ihrer Browser Software verhindern; wir weisen Sie jedoch darauf hin, dass Sie in diesem Fall gegebenenfalls nicht s\u00e4mtliche Funktionen dieser Website voll umf\u00e4nglich nutzen k\u00f6nnen. Durch die Nutzung dieser Website erkl\u00e4ren Sie sich mit der Bearbeitung der \u00fcber Sie erhobenen Daten durch Google in der zuvor beschriebenen Art und Weise und zu dem zuvor benannten Zweck einverstanden.  Datenschutzerkl\u00e4rung f\u00fcr die Nutzung von Google +1  Erfassung und Weitergabe von Informationen:\nMithilfe der Google +1-Schaltfl\u00e4che k\u00f6nnen Sie Informationen weltweit ver\u00f6ffentlichen. \u00dcber die Google +1-Schaltfl\u00e4che erhalten Sie und andere Nutzer personalisierte Inhalte von Google und unseren Partnern. Google speichert sowohl die Information, dass Sie f\u00fcr einen Inhalt +1 gegeben haben, als auch Informationen \u00fcber die Seite, die Sie beim Klicken auf +1 angesehen haben. Ihre +1 k\u00f6nnen als Hinweise zusammen mit Ihrem Profilnamen und Ihrem Foto in Google-Diensten, wie etwa in Suchergebnissen oder in Ihrem Google-Profil, oder an anderen Stellen auf Websites und Anzeigen im Internet eingeblendet werden.\nGoogle zeichnet Informationen \u00fcber Ihre +1-Aktivit\u00e4ten auf, um die Google-Dienste f\u00fcr Sie und andere zu verbessern. Um die Google +1-Schaltfl\u00e4che verwenden zu k\u00f6nnen, ben\u00f6tigen Sie ein weltweit sichtbares, \u00f6ffentliches Google-Profil, das zumindest den f\u00fcr das Profil gew\u00e4hlten Namen enthalten muss. Dieser Name wird in allen Google-Diensten verwendet. In manchen F\u00e4llen kann dieser Name auch einen anderen Namen ersetzen, den Sie beim Teilen von Inhalten \u00fcber Ihr Google-Konto verwendet haben. Die Identit\u00e4t Ihres Google-Profils kann Nutzern angezeigt werden, die Ihre E-Mail-Adresse kennen oder \u00fcber andere identifizierende Informationen von Ihnen verf\u00fcgen.  Verwendung der erfassten Informationen:\nNeben den oben erl\u00e4uterten Verwendungszwecken werden die von Ihnen bereitgestellten Informationen gem\u00e4\u00df den geltenden Google-Datenschutzbestimmungen genutzt. Google ver\u00f6ffentlicht m\u00f6glicherweise zusammengefasste Statistiken \u00fcber die +1-Aktivit\u00e4ten der Nutzer bzw. gibt diese an Nutzer und Partner weiter, wie etwa Publisher, Inserenten oder verbundene Websites.  Datenschutzerkl\u00e4rung f\u00fcr die Nutzung von Twitter  Auf unseren Seiten sind Funktionen des Dienstes Twitter eingebunden. Diese Funktionen werden angeboten durch die Twitter Inc., Twitter, Inc. 1355 Market St, Suite 900, San Francisco, CA 94103, USA. Durch das Benutzen von Twitter und der Funktion \"Re-Tweet\" werden die von Ihnen besuchten Webseiten mit Ihrem Twitter-Account verkn\u00fcpft und anderen Nutzern bekannt gegeben. Dabei werden auch Daten an Twitter \u00fcbertragen.  Wir weisen darauf hin, dass wir als Anbieter der Seiten keine Kenntnis vom Inhalt der \u00fcbermittelten Daten sowie deren Nutzung durch Twitter erhalten. Weitere Informationen hierzu finden Sie in der Datenschutzerkl\u00e4rung von Twitter unter http://twitter.com/privacy.  Ihre Datenschutzeinstellungen bei Twitter k\u00f6nnen Sie in den Konto-Einstellungen unter http://twitter.com/account/settings \u00e4ndern.  Quellenangaben: eRecht24, Facebook Datenschutzerkl\u00e4rung, Datenschutzerkl\u00e4rung f\u00fcr Google Analytics, Google Adsense Haftungsausschluss, Google +1 Datenschutzerkl\u00e4rung, Datenschutzerkl\u00e4rung f\u00fcr Twitter", 
            "title": "Haftungsausschluss (Disclaimer)"
        }
    ]
}